{"version":3,"sources":["components/Nav.js","hooks/useWindowDimensions.js","components/Editor.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","navbarDisplayFlex","display","justifyContent","navDisplayFlex","linkText","textDecoration","textTransform","color","navLinks","title","path","Nav","classes","AppBar","position","Toolbar","Container","maxWidth","className","edge","aria-label","Typography","variant","List","component","aria-labelledby","map","to","ListItem","button","ListItemText","primary","getWindowDimensions","window","width","innerWidth","height","innerHeight","Editor","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","code","setCode","getHeight","Grid","container","spacing","item","xs","Box","value","options","lineNumbers","autoFocus","mode","theme","onBeforeChange","editor","data","ReactHtmlParser","Home","Link","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.992153a8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AppBar, Toolbar, Typography, Container } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  navbarDisplayFlex: {\r\n    display: `flex`,\r\n    justifyContent: `space-between`,\r\n  },\r\n  navDisplayFlex: {\r\n    display: `flex`,\r\n    justifyContent: `space-between`,\r\n  },\r\n  linkText: {\r\n    textDecoration: `none`,\r\n    textTransform: `uppercase`,\r\n    color: `white`,\r\n  },\r\n});\r\n\r\nconst navLinks = [\r\n  { title: `home`, path: `/` },\r\n  { title: `editor`, path: `/editor` },\r\n];\r\n\r\nexport function Nav() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Container maxWidth=\"xl\" className={classes.navbarDisplayFlex}>\r\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"home\">\r\n            <Typography variant=\"h4\" color=\"inherit\">\r\n              Quill\r\n            </Typography>\r\n          </IconButton>\r\n\r\n          <List\r\n            component=\"nav\"\r\n            aria-labelledby=\"main navigation\"\r\n            className={classes.navDisplayFlex}\r\n          >\r\n            {navLinks.map(({ title, path }) => (\r\n              <Link to={path} key={title} className={classes.linkText}>\r\n                <ListItem button>\r\n                  <ListItemText primary={title} />\r\n                </ListItem>\r\n              </Link>\r\n            ))}\r\n          </List>\r\n        </Container>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import React from \"react\";\r\n\r\nimport { useState } from \"react\";\r\nimport useWindowDimensions from \"../hooks/useWindowDimensions\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\nexport default function Editor() {\r\n  const sample =\r\n    \"<html>\\n\\t<header></header>\\n\\t<body style='margin: 30px; margin-top: 15px !important; margin-bottom: 0px;'>\\n\\t\\t<h1>Sample</h1>\\n\\t\\t<p>This is a sample.</p>\\n\\t</body>\\n</html>\";\r\n  const { height, width } = useWindowDimensions();\r\n  var [code, setCode] = useState(sample);\r\n\r\n  var options = {\r\n    lineNumbers: true,\r\n    autoFocus: true,\r\n    mode: \"xml\",\r\n    theme: \"xq-light\",\r\n  };\r\n\r\n  function getHeight() {\r\n    return height - 65;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={6}>\r\n          <Box height={getHeight()}>\r\n            <CodeMirror\r\n              value={code}\r\n              options={options}\r\n              onBeforeChange={(editor, data, value) => {\r\n                setCode(value);\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <div height={getHeight()}>{ReactHtmlParser(code)}</div>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Link } from \"@material-ui/core\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <h1>Quill</h1>\r\n      <h3>In-browser HTML editor and renderer.</h3>\r\n      <p>Use the Editor to write HTML code and render it in real time.</p>\r\n      <Link href=\"https://github.com/wyatttroutman/react-quill\">\r\n        Refer to GitHub repository for more information.\r\n      </Link>\r\n    </Container>\r\n  );\r\n}\r\n","import \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/xq-light.css\";\r\nimport \"codemirror/theme/neat.css\";\r\nimport \"codemirror/mode/xml/xml.js\";\r\nimport \"codemirror/mode/javascript/javascript.js\";\r\nimport \"./App.css\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport { Nav } from \"./components/Nav\";\r\nimport Editor from \"./components/Editor\";\r\nimport Home from \"./components/Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Nav />\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/editor\">\r\n            <Editor />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}